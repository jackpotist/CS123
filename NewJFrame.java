
import com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException;
import java.awt.GridLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *MAKE QUERY A FUCKING PARAMETER
 * @author JoshuaZambales
 */
public class NewJFrame extends javax.swing.JFrame {
	private String user, pass, proj1, proj2;
   /**
     * Creates new form NewJFrame
     * @throws java.lang.ClassNotFoundException
     */
    public NewJFrame() throws ClassNotFoundException, SQLException {
       initComponents();
//replace with your mysql username and password
       user = "root";
       pass = "root";
       
       createTables(user, pass); 
       //populate();
           
        try {
            DefaultTableModel dtm3 = execQuer2(user,pass,"select project.project_name as PROJECT, \n" +
            "	purchase_order.date_issued as \"DATE ISSUED\", \n" +
            "	purchase_order.total_price as PRICE \n" +
            "	from project left join purchase_order \n" +
            "	on (project.project_id=purchase_order.project_id)\n" +
            "	order by project.project_id;");
            POTable.setModel(dtm3);
            
            DefaultTableModel dtm4 = execQuer2(user,pass,"select employee.employee_name as EMPLOYEE, GROUP_CONCAT(distinct project.project_name order by project.project_id asc separator ', ') as PROJECT \n" +
            "from employee left join payroll on employee.employee_id = payroll.employee_id\n" +
            "left join project on project.project_id = payroll.project_id\n" +
            "group by employee_name\n" +
            "order by employee.employee_id asc;");
            EmployeesTable.setModel(dtm4);
            
            DefaultTableModel dtm5 = execQuer2(user,pass,"select distinct material.material_name as MATERIALS, \n" +
            "	material.quantity as QUANTITY\n" +
            "	from supplier, material, for_use, project\n" +
            "	where (material.material_id = for_use.material_id)\n" +
            "	and (project.project_id = for_use.project_id)\n" +
            "	and material.supplier_id = 1;");
            WarehouseTable.setModel(dtm5);
            
            
        } catch (InstantiationException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
    }
    

     /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        CreateProject = new javax.swing.JButton();
        LoadProject = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        Tab1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        Project2Panel = new javax.swing.JPanel();
        EmployeScroll = new javax.swing.JScrollPane();
        PayrollTable1 = new javax.swing.JTable();
        AddEmployee1 = new javax.swing.JButton();
        RemoveEmployee1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        MaterialTable1 = new javax.swing.JTable();
        EmployeeInfoLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        AddMaterial1 = new javax.swing.JButton();
        RemoveMaterial1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        Week1 = new javax.swing.JTextField();
        Week1Button = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        mon_p3 = new javax.swing.JLabel();
        tues_p3 = new javax.swing.JLabel();
        wed_p3 = new javax.swing.JLabel();
        thurs_p3 = new javax.swing.JLabel();
        txtmon_p3 = new javax.swing.JTextField();
        txttues_p3 = new javax.swing.JTextField();
        txtwed_p3 = new javax.swing.JTextField();
        txtthurs_p3 = new javax.swing.JTextField();
        txtfri_p3 = new javax.swing.JTextField();
        txtsat_p3 = new javax.swing.JTextField();
        txtsun_p3 = new javax.swing.JTextField();
        sun_p3 = new javax.swing.JLabel();
        sat_p3 = new javax.swing.JLabel();
        fri_p3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        employee_rate_p3 = new javax.swing.JTextField();
        update_employee_p3 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        employee_name_p3 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        material_name_p3 = new javax.swing.JTextField();
        material_quantity_p3 = new javax.swing.JTextField();
        edit_material_p3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        PayrollTable2 = new javax.swing.JTable();
        AddEmployee2 = new javax.swing.JButton();
        RemoveEmployee2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ItemTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        AddItem2 = new javax.swing.JButton();
        RemoveItem2 = new javax.swing.JButton();
        Week2 = new javax.swing.JTextField();
        Week2Button = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        mon_p2 = new javax.swing.JLabel();
        tues_p2 = new javax.swing.JLabel();
        wed_p2 = new javax.swing.JLabel();
        thurs_p2 = new javax.swing.JLabel();
        txtmon_p2 = new javax.swing.JTextField();
        txttues_p2 = new javax.swing.JTextField();
        txtwed_p2 = new javax.swing.JTextField();
        txtthurs_p2 = new javax.swing.JTextField();
        txtfri_p2 = new javax.swing.JTextField();
        txtsat_p2 = new javax.swing.JTextField();
        txtsun_p2 = new javax.swing.JTextField();
        sun_p2 = new javax.swing.JLabel();
        sat_p2 = new javax.swing.JLabel();
        fri_p2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        material_name_p2 = new javax.swing.JTextField();
        material_quantity_p2 = new javax.swing.JTextField();
        edit_material_p2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        employee_rate_p2 = new javax.swing.JTextField();
        update_employee_p2 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        employee_name_p2 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        AddtoEmployee = new javax.swing.JButton();
        RemoveToEmployee = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        EmployeesTable = new javax.swing.JTable();
        Update_employee = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_employee_name = new javax.swing.JTextField();
        txt_employee_project = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        WarehouseTable = new javax.swing.JTable();
        UpdateInventory = new javax.swing.JButton();
        AddWarehouse = new javax.swing.JButton();
        RemoveWarehouse = new javax.swing.JButton();
        txt_employee_id = new javax.swing.JTextField();
        txt_material_name = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        POTable = new javax.swing.JTable();
        ADDPO = new javax.swing.JButton();
        REMOVEPO = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        UPDATEPO = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CreateProject.setText("Create Project");
        CreateProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    CreateProjectActionPerformed(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        LoadProject.setText("Load Project");
        LoadProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    LoadProjectActionPerformed(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        Tab1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        Tab1.setToolTipText("");
        Tab1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Tab1KeyPressed(evt);
            }
        });

        Project2Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Project2Panel.setName(""); // NOI18N

        EmployeScroll.setAutoscrolls(true);
        EmployeScroll.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        EmployeScroll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EmployeScrollMouseClicked(evt);
            }
        });

        PayrollTable1.setAutoCreateRowSorter(true);
        PayrollTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        EmployeScroll.setViewportView(PayrollTable1);
        if (PayrollTable1.getColumnModel().getColumnCount() > 0) {
            PayrollTable1.getColumnModel().getColumn(0).setHeaderValue("Name");
            PayrollTable1.getColumnModel().getColumn(1).setHeaderValue("Rate");
            PayrollTable1.getColumnModel().getColumn(2).setHeaderValue("Working Hours");
            PayrollTable1.getColumnModel().getColumn(3).setHeaderValue("Total");
        }

        AddEmployee1.setText("Add Employee");
        AddEmployee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    AddEmployee1ActionPerformed(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        RemoveEmployee1.setText("Remove Employee");
        RemoveEmployee1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveEmployee1ActionPerformed(evt);
            }
        });

        MaterialTable1.setAutoCreateRowSorter(true);
        MaterialTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Quantity"
            }
        ));
        MaterialTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MaterialTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(MaterialTable1);

        EmployeeInfoLabel.setText("Employee Information");

        jLabel4.setText(" Material/Supplies Information");

        AddMaterial1.setText("Add");
        AddMaterial1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    AddMaterial1ActionPerformed(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        RemoveMaterial1.setText("Remove");
        RemoveMaterial1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    RemoveMaterial1ActionPerformed(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        jTextField2.setText("jTextField1");

        Week1Button.setText("Go to week");
        Week1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Week1ButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Week:");

        mon_p3.setText("Mon:");

        tues_p3.setText("Tues:");

        wed_p3.setText("Wed:");

        thurs_p3.setText("Thurs:");

        txtmon_p3.setText("    ");
        txtmon_p3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmon_p3ActionPerformed(evt);
            }
        });

        txttues_p3.setText("    ");

        txtwed_p3.setText("    ");

        txtthurs_p3.setText("    ");

        txtfri_p3.setText("    ");

        txtsat_p3.setText("    ");

        txtsun_p3.setText("    ");

        sun_p3.setText("Sun:");

        sat_p3.setText("Sat:");

        fri_p3.setText("Fri:");

        jLabel14.setText("Rate:");

        employee_rate_p3.setText("  ");

        update_employee_p3.setText("Update Employee Payroll");
        update_employee_p3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_employee_p3ActionPerformed(evt);
            }
        });

        jLabel15.setText("   Name:");

        jLabel16.setText("Name:");

        jLabel17.setText("Quantity:");

        material_quantity_p3.setText("                ");

        edit_material_p3.setText("Edit Material");
        edit_material_p3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_material_p3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Project2PanelLayout = new javax.swing.GroupLayout(Project2Panel);
        Project2Panel.setLayout(Project2PanelLayout);
        Project2PanelLayout.setHorizontalGroup(
            Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Project2PanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Project2PanelLayout.createSequentialGroup()
                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Project2PanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(update_employee_p3)
                                .addGap(17, 17, 17))
                            .addGroup(Project2PanelLayout.createSequentialGroup()
                                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Project2PanelLayout.createSequentialGroup()
                                        .addComponent(AddEmployee1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(RemoveEmployee1)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Project2PanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(mon_p3, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(tues_p3))
                                            .addComponent(wed_p3))
                                        .addComponent(thurs_p3))
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(25, 25, 25)
                                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(employee_rate_p3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(employee_name_p3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(Project2PanelLayout.createSequentialGroup()
                                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtthurs_p3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                                            .addComponent(txtmon_p3, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txttues_p3, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtwed_p3, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(sun_p3)
                                                .addComponent(fri_p3))
                                            .addComponent(sat_p3))
                                        .addGap(28, 28, 28)
                                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtfri_p3, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                                            .addComponent(txtsat_p3)
                                            .addComponent(txtsun_p3))))))
                        .addGap(198, 198, 198))
                    .addGroup(Project2PanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(Project2PanelLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(EmployeeInfoLabel)
                                .addGap(163, 163, 163)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Week1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Week1Button))
                            .addComponent(edit_material_p3)
                            .addGroup(Project2PanelLayout.createSequentialGroup()
                                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17))
                                .addGap(18, 18, 18)
                                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(material_quantity_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(material_name_p3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(Project2PanelLayout.createSequentialGroup()
                                .addComponent(AddMaterial1)
                                .addGap(18, 18, 18)
                                .addComponent(RemoveMaterial1)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(Project2PanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(EmployeScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Project2PanelLayout.createSequentialGroup()
                    .addGap(364, 364, 364)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(365, Short.MAX_VALUE)))
        );
        Project2PanelLayout.setVerticalGroup(
            Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Project2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmployeeInfoLabel)
                    .addComponent(Week1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Week1Button)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmployeScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Project2PanelLayout.createSequentialGroup()
                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddEmployee1)
                            .addComponent(RemoveEmployee1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Project2PanelLayout.createSequentialGroup()
                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Project2PanelLayout.createSequentialGroup()
                                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mon_p3)
                                    .addComponent(txtmon_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fri_p3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tues_p3)
                                    .addComponent(txttues_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sat_p3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(wed_p3)
                                    .addComponent(txtwed_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(Project2PanelLayout.createSequentialGroup()
                                .addComponent(txtfri_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtsat_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(sun_p3)
                                    .addComponent(txtsun_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(thurs_p3)
                            .addComponent(txtthurs_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(employee_rate_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(employee_name_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Project2PanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(update_employee_p3)
                        .addGap(100, 100, 100))
                    .addGroup(Project2PanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddMaterial1)
                            .addComponent(RemoveMaterial1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edit_material_p3)
                        .addGap(9, 9, 9)
                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(material_name_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(material_quantity_p3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(Project2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Project2PanelLayout.createSequentialGroup()
                    .addGap(256, 256, 256)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(256, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Project2Panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(Project2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        Tab1.addTab("Project 1", jPanel3);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setName(""); // NOI18N

        jScrollPane4.setAutoscrolls(true);
        jScrollPane4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        PayrollTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Rate", "Mon", "Tues", "Wed", "Thurs", "Fri", "Sat", "Sun", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        PayrollTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PayrollTable2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(PayrollTable2);

        AddEmployee2.setText("Add Employee");
        AddEmployee2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    AddEmployee2ActionPerformed(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        RemoveEmployee2.setText("Remove Employee");
        RemoveEmployee2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveEmployee2ActionPerformed(evt);
            }
        });

        ItemTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Quantity"
            }
        ));
        ItemTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ItemTable2);

        jLabel1.setText("Employee Information");

        jLabel2.setText(" Material/Supplies Information");

        AddItem2.setText("Add");
        AddItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    AddItem2ActionPerformed(evt);
                } catch (SQLException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        RemoveItem2.setText("Remove");
        RemoveItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    try {
                        RemoveItem2ActionPerformed(evt);
                    } catch (InstantiationException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IllegalAccessException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        Week2.setText("      ");

        Week2Button.setText("jButton5");
        Week2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Week2ButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Week:");

        mon_p2.setText("Mon:");

        tues_p2.setText("Tues:");

        wed_p2.setText("Wed:");

        thurs_p2.setText("Thurs:");

        txtmon_p2.setText("    ");
        txtmon_p2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmon_p2ActionPerformed(evt);
            }
        });

        txttues_p2.setText("    ");

        txtwed_p2.setText("    ");

        txtthurs_p2.setText("    ");

        txtfri_p2.setText("    ");

        txtsat_p2.setText("    ");

        txtsun_p2.setText("    ");

        sun_p2.setText("Sun:");

        sat_p2.setText("Sat:");

        fri_p2.setText("Fri:");

        jLabel6.setText("Name:");

        jLabel7.setText("Quantity:");

        material_quantity_p2.setText("                ");

        edit_material_p2.setText("Edit Material");
        edit_material_p2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_material_p2ActionPerformed(evt);
            }
        });

        jLabel12.setText("Rate:");

        employee_rate_p2.setText("  ");

        update_employee_p2.setText("Update Employee Payroll");
        update_employee_p2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_employee_p2ActionPerformed(evt);
            }
        });

        jLabel13.setText("   Name:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1)
                        .addGap(156, 156, 156)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Week2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Week2Button))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                        .addGap(4, 4, 4)
                                                        .addComponent(mon_p2))
                                                    .addComponent(wed_p2)
                                                    .addComponent(tues_p2))
                                                .addComponent(thurs_p2))
                                            .addComponent(jLabel12)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel13)))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(employee_name_p2, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(employee_rate_p2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtthurs_p2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                                            .addComponent(txtmon_p2, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txttues_p2, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtwed_p2, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(fri_p2, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(sat_p2))
                                            .addComponent(sun_p2))
                                        .addGap(28, 28, 28)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtfri_p2, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                                            .addComponent(txtsat_p2)
                                            .addComponent(txtsun_p2)))))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(AddEmployee2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(RemoveEmployee2))
                                        .addComponent(edit_material_p2)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(AddItem2)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel7)))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(material_quantity_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(material_name_p2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(RemoveItem2))))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(update_employee_p2)
                                .addGap(76, 76, 76)))))
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Week2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Week2Button)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddEmployee2)
                    .addComponent(RemoveEmployee2))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddItem2)
                            .addComponent(RemoveItem2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edit_material_p2)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(material_name_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(material_quantity_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mon_p2)
                                    .addComponent(txtmon_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tues_p2)
                                    .addComponent(txttues_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(wed_p2)
                                    .addComponent(txtwed_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fri_p2)
                                    .addComponent(txtfri_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(sat_p2)
                                    .addComponent(txtsat_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(sun_p2)
                                    .addComponent(txtsun_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(thurs_p2)
                            .addComponent(txtthurs_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(employee_rate_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(employee_name_p2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(update_employee_p2)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        Tab1.addTab("Project 2", jPanel2);

        jTabbedPane2.addTab("Projects", Tab1);

        AddtoEmployee.setText("Add Employee");
        AddtoEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddtoEmployeeActionPerformed(evt);
            }
        });

        RemoveToEmployee.setText("Remove Employee");
        RemoveToEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveToEmployeeActionPerformed(evt);
            }
        });

        EmployeesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Project", "Remarks"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        EmployeesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EmployeesTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(EmployeesTable);

        Update_employee.setText("Update");
        Update_employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_employeeActionPerformed(evt);
            }
        });

        jLabel18.setText("Name:");

        jLabel19.setText("Project(s):");

        txt_employee_name.setText("            ");

        txt_employee_project.setText(" ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(AddtoEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Update_employee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RemoveToEmployee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_employee_project)
                            .addComponent(txt_employee_name, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(AddtoEmployee)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveToEmployee)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Update_employee)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txt_employee_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txt_employee_project, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Employees", jPanel5);

        WarehouseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        WarehouseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WarehouseTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(WarehouseTable);

        UpdateInventory.setText("Update Inventory");
        UpdateInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateInventoryActionPerformed(evt);
            }
        });

        AddWarehouse.setText("Add Item");

        RemoveWarehouse.setText("Remove Item");
        RemoveWarehouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveWarehouseActionPerformed(evt);
            }
        });

        jLabel8.setText("Name:");

        jLabel9.setText("Quantity:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(UpdateInventory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RemoveWarehouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AddWarehouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_employee_id, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_material_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(233, 233, 233))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(AddWarehouse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveWarehouse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateInventory)
                        .addGap(47, 47, 47)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_material_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addContainerGap(123, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Warehouse", jPanel4);

        POTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        POTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                POTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(POTable);

        ADDPO.setText("Add ");
        ADDPO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDPOActionPerformed(evt);
            }
        });

        REMOVEPO.setText("Remove");
        REMOVEPO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                REMOVEPOActionPerformed(evt);
            }
        });

        jLabel10.setText("Name:");

        jLabel11.setText("Amount:");

        jTextField1.setText("            ");

        jTextField3.setText("                ");

        UPDATEPO.setText("Update");
        UPDATEPO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEPOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(REMOVEPO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ADDPO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(UPDATEPO))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(ADDPO)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(REMOVEPO)
                            .addComponent(UPDATEPO))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Purchase Orders", jPanel6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateProject)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LoadProject)
                .addContainerGap(731, Short.MAX_VALUE))
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateProject)
                    .addComponent(LoadProject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(636, 636, 636))
        );

        pack();
    }// </editor-fold>               
	
	 /**
     * connects to jcarl database, assuming that the database has already been created after createTables() was called
     * @param user - username for mysql
     * @param pass - password for mysql
     * @return Statement (where queries will be executed)
     * @throws SQLException 
     */
    private Statement connect(String user, String pass) throws SQLException {
        
        //establishing connection
        String stringcon = "jdbc:mysql://localhost:3306/jcarl";
        
        //for param user and pass: allow users to input their own username and passowrd of their sql server
        Connection con = DriverManager.getConnection(stringcon,user,pass);
        
        Statement state = con.createStatement();
        return state;
        
    }
    
    /**
     * THIS WILL CREATE THE DATABASE IF DATABASE DOES NOT EXIST YET
     */
    private void createTables(String user, String pass) {
        String quer1 = "CREATE DATABASE IF NOT EXISTS jcarl;";
        String quer2 = "create table IF NOT EXISTS project(\n" +
"		project_id Integer(6) primary key not null AUTO_INCREMENT,\n" +
"		project_name Varchar(60) not null,\n" +
"		start_date Date not null,\n" +
"		end_date Date not null,\n" + //this should be default null ?? or kailangan talaga may estimate period for each project
"		client Varchar(50) not null\n" +
"		);";
        String quer3 = "create table IF NOT EXISTS employee(\n" +
"		employee_id Integer(6) primary key not null AUTO_INCREMENT,\n" +
"		employee_name Varchar(60) not null,\n" +
"		rate DOUBLE(10,2) not null\n" +
"		);";
        String quer4 = "create table if not exists purchase_order(\n" +
"		po_id Integer(6) primary key not null AUTO_INCREMENT,\n" +
"		project_id Integer(6) not null,\n" +
"		name VARCHAR(60) not null, \n" +
"		date_issued Date not null,\n" +
"		total_price Double(10,2) not null,\n" +
"		Foreign key (project_id) references project(project_id) on delete cascade on update restrict\n" +
"		);";
        
        String quer5 = "create table IF NOT EXISTS supplier(\n" +
"		supplier_id Integer(6) primary key not null AUTO_INCREMENT,\n" +
"		supplier_name Varchar(60) not null,\n" +
"		category Varchar(50) not null\n" +
"		);";
        String quer6 = "create table if not exists material(\n" +
"		material_id Integer(6) primary key not null AUTO_INCREMENT,\n" +
"		supplier_id Integer(6),\n" +
"		material_name Varchar(50) not null,\n" +
"		quantity Integer(5) not null,\n" +
"		price Double(10,2) not null,\n" +
"		foreign key (supplier_id) references supplier(supplier_id) on delete cascade on update restrict\n" +
"		);";
        String quer7 = "create table if not exists payroll(\n" +
"		payroll_id Integer(6) primary key not null AUTO_INCREMENT,\n" +
"		employee_id Integer(6) not null,\n" +
"		project_id Integer(6) not null,\n" +
"		mon Integer(2),\n" +
"		tues Integer(2),\n" +
"		wed Integer(2),\n" +
"		thurs Integer(2),\n" +
"		fri Integer(2),\n" +
"		sat Integer(2),\n" +
"		sun Integer(2),\n" +
"		Foreign key (employee_id) references employee(employee_id) on delete cascade on update restrict,\n" +
"		Foreign key (project_id) references project(project_id) on delete cascade on update restrict\n" +
"		);";
        String quer8 = "create table if not exists for_use(\n" +
"		use_id Integer(6) primary key not null AUTO_INCREMENT,\n" +
"		project_id Integer(6) not null,\n" +
"		material_id Integer(6) not null,\n" +
"		quantity Integer(5) not null,\n" +
"		foreign key (project_id) references project(project_id) on delete cascade on update restrict,\n" +
"		foreign key (material_id) references material(material_id) on delete cascade on update restrict\n" +
"		);";
           
       try {
           
           Connection con = DriverManager.getConnection("jdbc:mysql://localhost/?user="+ user +"&password=" + pass);
           Statement stmt = con.createStatement();
           stmt.executeUpdate(quer1); //creates database
           stmt.close();
           con.close();
           
           //adds tables to database
           execQuer1(user,pass,quer2);
           execQuer1(user,pass,quer3);
           execQuer1(user,pass,quer4);
           execQuer1(user,pass,quer5);
           execQuer1(user,pass,quer6);
           execQuer1(user,pass,quer7);
           execQuer1(user,pass,quer8);
           
       } catch (SQLException ex) {
           Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
           System.out.print("Wrong username and/or password");
       }
    }
    
    /**
     * For queries that don't have results
     * @param user
     * @param pass
     * @param quer - query string to be executed
     * @throws SQLException 
     */
    private void execQuer1(String user, String pass, String quer) throws SQLException {
        Statement state = connect(user,pass);
        state.executeUpdate(quer);
        state.close();
    }
    
    /**
     * show the results of a query through a table
     * @param user
     * @param pass
     * @param quer - query string to be executed
     * @return the table that will attach to some table in the GUI
     * @throws SQLException
     * @throws InstantiationException
     * @throws ClassNotFoundException
     * @throws IllegalAccessException 
     */
    private DefaultTableModel execQuer2(String user, String pass, String quer) throws SQLException, InstantiationException, ClassNotFoundException, IllegalAccessException {
        Statement state = connect(user,pass);
        ResultSet rs = state.executeQuery(quer);
        DefaultTableModel dtm = getTable(rs); //turn metadata of result into a table
        state.close();
        return dtm; //return the table that will attach to some table in the GUI
    }
    
    /**
     * turns the ResultSet into a table
     * @param rs - ResultSet from the query executed
     * @return meta data turned table
     * @throws SQLException 
     */
    private DefaultTableModel getTable(ResultSet rs) throws SQLException{
        ResultSetMetaData rsmetadata = rs.getMetaData();

        //store no. of columns
        int col = rsmetadata.getColumnCount();

        //This object will pass data into JTable
        DefaultTableModel dtm = new DefaultTableModel();
        Vector columns_name = new Vector();
        Vector data_rows = new Vector();

        for (int i=1; i < col+1; i++){
            columns_name.addElement(rsmetadata.getColumnName(i));
        }
        dtm.setColumnIdentifiers(columns_name);

        while(rs.next()){
            data_rows = new Vector();
            for(int j=1; j<col+1 ;j++){
                data_rows.addElement(rs.getString(j));
            }
            dtm.addRow(data_rows);
        }
        
        return dtm;
        
    }
    
    /**
     * populate tables with fake info
     */
    private void populate() throws SQLException {
        String quer1 = "insert into project(project_name, start_date, end_date, client) values\n" +
        "(\"JM's New Dorm\", \"2011-01-01\", \"2012-01-01\", \"Captain Board Shorts\"),\n" +
        "(\"Pia's New Dancing Place Whatever\", \"2014-08-09\", \"2015-02-14\", \"Captain Board Shorts\"),\n" +
        "(\"Javy's Old Drum Place Thingy\", \"2008-01-05\",\" 2010-12-12\", \"Lolo mo\"),\n" +
        "(\"Pet House\", \"2013-12-01\", \"2014-12-01\", \"Captain Board Shorts\"),\n" +
        "(\"McDo Caribbean\", \"2014-10-11\", \"2014-10-15\", \"McDo\"),\n" +
        "(\"Araneta Park\", \"2013-12-12\", \"2014-04-14\", \"Smart\"),\n" +
        "(\"London Bridge in Paranaque\", \"2012-12-21\", \"2013-12-21\", \"Annabelle\"),\n" +
        "(\"Gym ni Josh\", \"2002-06-09\", \"2008-02-04\", \"Yung Pogi\"),\n" +
        "(\"Happy House of Sir Happy\", \"2014-06-16\", \"2014-10-17\", \"Sir Happy\");";
        execQuer1(user,pass,quer1);
        
        String quer2 = "insert into employee(employee_name, rate) values\n" +
        "(\"Mang Jose\", 1.00),\n" +
        "(\"Don Romantiko\", 5000.00),\n" +
        "(\"Hari ng Sablay\", 3000.00),\n" +
        "(\"Marco Francisco DeMargue\", 200.00),\n" +
        "(\"FishNChips\", 100.00),\n" +
        "(\"Michael Jordan\", 1005.00),\n" +
        "(\"Don Romantiko\", 20.00),\n" +
        "(\"George Washing\", 600.50),\n" +
        "(\"Sean Kingston\", 568.44),\n" +
        "(\"Flexing Flexo\", 669.66),\n" +
        "(\"Triple H\", 400.00);";
        execQuer1(user,pass,quer2);
        
        String quer3 = "insert into supplier(supplier_name, category) values\n" +
        "(\"Warehouse\",\"Current Stocks\"),\n" +
        "(\"Captain Board Shorts' Supplies!\", \"Board Shorts Stuff\"),\n" +
        "(\"Gamit ng Lolo mo\", \"Things\"),\n" +
        "(\"McAfee's Metal Materials\", \"Metal\"),\n" +
        "(\"Lolo's Pake\", \"Pake\"),\n" +
        "(\"Karinderya\", \"Food Stuff\"),\n" +
        "(\"Mang Kanor's Woodworks\",\"Wood\"),\n" +
        "(\"Don Romantiko's Furniture\",\"Furniture\"),\n" +
        "(\"Cementadong Pinoy\",\"Cement\");";
        execQuer1(user,pass,quer3);
        
        String quer4 = "insert into payroll(employee_id, project_id) values\n" +
        "(1, 1),\n" +
        "(2, 2),\n" +
        "(3,3),\n" +
        "(4,4),\n" +
        "(5,4),\n" +
        "(5,1),\n" +
        "(6,5),\n" +
        "(7,7),\n" +
        "(1,6),\n" +
        "(8,2),\n" +
        "(11,8),\n" +
        "(9,9),\n" +
        "(10,7);";
        execQuer1(user,pass,quer4);
        
        //execQuer1(user,pass,"ALTER TABLE material AUTO_INCREMENT = 002000;");
        String quer5 = "insert into material(supplier_id,material_name, quantity, price) values\n" +
        "(2,\"Board Shorts\", 50, 10000.00), \n" +
        "(3,\"Antique Glass\", 20, 5000.00),\n" +
        "(4,\"Metal Plastic Bag\", 30, 20.00),\n" +
        "(5,\"Pake\", 5, 0.99),\n" +
        "(6,\"Fish Bones\",10, 15.00),\n" +
        "(6, \"Chicarong Bakal\", 50, 55.99),\n" +
        "(2, \"Trunks\", 20, 500.00),\n" +
        "(1, \"Sound System\", 2, 50000.00),\n" +
        "(1, \"Metal Plates\", 5, 4000.00),\n" +
        "(1, \"Cabinet\", 10, 3000.00),\n" +
        "(7, \"Wooden Plank\", 40, 100.00),\n" +
        "(8, \"Painting Frame\", 15, 150.50),\n" +
        "(9, \"Cement Paste\", 40, 200.00),\n" +
        "(1, \"Metal Frame\", 20, 300.00),\n" +
        "(1, \"Railings\", 3, 500.99);";
        execQuer1(user,pass,quer5);
        
        String quer6 = "insert into purchase_order(project_id, name, date_issued, total_price) values\n" +
        "(000001, \"JM Santos\", \"2011-01-01\", 60000.50),\n" +
        "(000002, \"Pia Encarnacion\", \"2014-05-21\", 50000.00),\n" +
        "(000003, \"Pet Samaco\", \"2008-01-06\", 10.00),\n" +
        "(000004, \"Javy Flavier\", \"2013-12-02\", 600.00),\n" +
        "(000005, \"Joshua Zambales\", \"2013-12-20\", 500000.00);";
        execQuer1(user,pass,quer6);
        
        String quer7 = "insert into for_use(project_id, material_id, quantity) values\n" +
        "(1,2,5),\n" +
        "(4,1,10),\n" +
        "(5,4,5),\n" +
        "(6,5,2),\n" +
        "(2,3,5),\n" +
        "(4,4,2),\n" +
        "(4,7,1),\n" +
        "(7,2,1),\n" +
        "(3,8,2),\n" +
        "(5,9,2),\n" +
        "(2,10,2),\n" +
        "(8,14,4),\n" +
        "(8,13,3),\n" +
        "(8,12,8),\n" +
        "(7,7,9);";
        execQuer1(user,pass,quer7);
        
    }
    
    private void initTab1(String proj) throws SQLException, InstantiationException, ClassNotFoundException, IllegalAccessException {
        Statement state = connect(user,pass);
        ResultSet rs1 = state.executeQuery("select project_name from project where project_id=\""+proj1+"\";");
        rs1.next();
        String tproj =  rs1.getObject(1).toString();
        state.close();
        Tab1.setTitleAt(0, tproj);
        
        /*
        Statement stm = connect(user,pass);
        ResultSet rs = stm.executeQuery("select project_id from project where project_name=\""+proj+"\"");
        rs.next();
        int projid = rs.getInt(1);*/
        
        DefaultTableModel dtm = execQuer2(user,pass, "select employee_name, rate,\n" +
        "ifnull(mon, 8) as MONDAY, \n" +
        "ifnull(tues, 8) as TUESDAY, \n" +
        "ifnull(wed,8) as WEDNESDAY, \n" +
        "ifnull(thurs,8) as THURSDAY, \n" +
        "ifnull(fri,7) as FRIDAY,\n" +
        "ifnull(sat,7) as SATURDAY,\n" +
        "ifnull(sun,7) as SUNDAY,\n" +
        "ifnull((sum(mon+tues+wed+thurs+fri)*rate),8*rate) as 'Total Hours'\n" +
        "from payroll left join employee\n" +
        "on employee.employee_id = payroll.employee_id\n" +
        "where payroll.project_id="+proj1+"\n" +
        "group by employee.employee_id;");
        PayrollTable1.setModel(dtm);

        DefaultTableModel dtm2 = execQuer2(user,pass,"select distinct material.material_name as MATERIALS,\n" +
"	material.quantity as QUANTITY\n" +
"	from project, material, for_use\n" +
"	where (project.project_id = for_use.project_id)\n" +
"	and (material.material_id = for_use.material_id)\n" +
"	and project.project_id ="+proj1+";");
        MaterialTable1.setModel(dtm2);
    }
    
    private void initTab2(String proj) throws SQLException, InstantiationException, ClassNotFoundException, IllegalAccessException {
        Statement state = connect(user,pass);
        ResultSet rs1 = state.executeQuery("select project_name from project where project_id=\""+proj2+"\";");
        rs1.next();
        String tproj =  rs1.getObject(1).toString();
        state.close();
        Tab1.setTitleAt(1, tproj);
        
        /*
        Statement stm = connect(user,pass);
        ResultSet rs = stm.executeQuery("select project_id from project where project_name=\""+proj+"\"");
        rs.next();
        int projid = rs.getInt(1);*/
        
        DefaultTableModel dtm = execQuer2(user,pass, "select employee_name, rate,\n" +
        "ifnull(mon, 8) as MONDAY, \n" +
        "ifnull(tues, 8) as TUESDAY, \n" +
        "ifnull(wed,8) as WEDNESDAY, \n" +
        "ifnull(thurs,8) as THURSDAY, \n" +
        "ifnull(fri,7) as FRIDAY,\n" +
        "ifnull(sat,7) as SATURDAY,\n" +
        "ifnull(sun,7) as SUNDAY,\n" +
        "ifnull((sum(mon+tues+wed+thurs+fri)*rate),8*rate) as 'Total Hours'\n" +
        "from payroll left join employee\n" +
        "on employee.employee_id = payroll.employee_id\n" +
        "where payroll.project_id="+proj2+"\n" +
        "group by employee.employee_id;");
        PayrollTable2.setModel(dtm);

        DefaultTableModel dtm2 = execQuer2(user,pass,"select distinct material.material_name as MATERIALS,\n" +
"	material.quantity as QUANTITY\n" +
"	from project, material, for_use\n" +
"	where (project.project_id = for_use.project_id)\n" +
"	and (material.material_id = for_use.material_id)\n" +
"	and project.project_id ="+proj2+";");
        ItemTable2.setModel(dtm2);
    }

  private void LoadProjectActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {                                            
      Statement stm = connect(user,pass);
      ResultSet rs = stm.executeQuery("select ifnull(project_name,'NO PROJECTS YET') from project;");
      
      ArrayList<String> projlist = new ArrayList<>();
      while(rs.next()) {
          projlist.add(rs.getString(1));
      }
      String[] projl = new String[projlist.size()];
      projlist.toArray(projl);
      
      final JComboBox<String> projl1 = new JComboBox<>(projl);
      final JComboBox<String> projl2 = new JComboBox<>(projl);
      
      Object[] fields = {
            "First Project: ", projl1,
            "Second Project: ", projl2,
        };
      Object[] options = {"Ok", "Cancel"};
        
      int n = JOptionPane.showOptionDialog(null, fields, 
              "Load Projects", JOptionPane.YES_NO_OPTION, 
              JOptionPane.PLAIN_MESSAGE, null, options, options[1]);
      
      if (n == JOptionPane.OK_OPTION){
          String tempproj1 = (String) projl1.getSelectedItem();
          String tempproj2 = (String) projl2.getSelectedItem();
          
          Statement state = connect(user,pass);
          ResultSet rs1 = state.executeQuery("select project_id from project where project_name=\""+tempproj1+"\";");
                rs1.next();
                proj1 =  rs1.getObject(1).toString();
                
          ResultSet rs2 = state.executeQuery("select project_id from project where project_name=\""+tempproj2+"\";");
                rs2.next();
                proj2 =  rs2.getObject(1).toString();
          state.close();
          
            try {
                initTab1(proj1);
                initTab2(proj2);
            } catch (    InstantiationException | ClassNotFoundException | IllegalAccessException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
      }
    }                                           

    private void Tab1KeyPressed(java.awt.event.KeyEvent evt) {                                
        // TODO add your handling code here:   
    }                               

private void RemoveMaterial1ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException, InstantiationException, IllegalAccessException, ClassNotFoundException {                               
       if (MaterialTable1.getSelectedRow() == -1){
           JOptionPane.showMessageDialog(null, "Please select an item to remove", "Error!", JOptionPane.ERROR_MESSAGE);
       }
       else{
           int[] toDelete = MaterialTable1.getSelectedRows();
           String rows = new String();
           for (int i = 0; i < toDelete.length; i++){
               rows += "" + MaterialTable1.getValueAt(toDelete[i], 0).toString();
               if (i < toDelete.length-1)
                    rows += ", ";
               if (i == toDelete.length)
                    rows += "?";
           }
           Object question = "Are you sure you want to delete the following items: " + rows + "?";
           Object[] options = {"Yes", "No"};
           
           int n = JOptionPane.showOptionDialog(null, question, "Remove Items", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
           try{
                if (n == JOptionPane.OK_OPTION){
                    String q = new String();
                    q = rows.replace(", ", " OR ");
                    q = rows.replace("?", "");
                    String query = "DELETE FROM for_use WHERE material_name = \"" + rows + "\";";
                    execQuer1(user, pass, query);

                    rows.replace("?", "");
                    JOptionPane.showMessageDialog(null, "The following materials have been deleted from the database:" + rows, "Materials deleted", JOptionPane.PLAIN_MESSAGE);
                //DELETE NECESSARY ROWS
                for (int i = 0; i < toDelete.length; i++)
                   ((DefaultTableModel)MaterialTable1.getModel()).removeRow(toDelete[i]);
                initTab1(proj1);
                }
           } catch (MySQLSyntaxErrorException lel) {}
       }
    }                               

    private void AddMaterial1ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException, InstantiationException, ClassNotFoundException, IllegalAccessException {
        Object[] options = {"Current Suppliers", "Warehouse"};
        
        int n = JOptionPane.showOptionDialog(null, "Add Material from", "Add Material", 
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
                null, options, null);
        
        if (n == JOptionPane.YES_OPTION){ //if current suppliers option is selected
            
            Statement stm = connect(user,pass);
            ResultSet rs = stm.executeQuery("select supplier_name from supplier where supplier_id>1;");

            ArrayList<String> temp = new ArrayList<>();
            while(rs.next()) {
                temp.add(rs.getString(1));
            }
            String[] supl = new String[temp.size()];
            temp.toArray(supl);

            final JComboBox<String> suplist = new JComboBox<>(supl);
            
            JTextField m_name = new JTextField();
            JTextField qty = new JTextField();
            JTextField cost = new JTextField();
            
            Object[] fields = {
                "Choose Supplier", suplist,
                "Material Name", m_name,
                "Quantity", qty,
                "Price", cost,
            };
            
            Object[] options1 = {"Ok", "Cancel"};
            
            int c = JOptionPane.showOptionDialog(null, fields, "Add Material", 
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
                null, options1, options1[0]);
            try {
            if (c == JOptionPane.OK_OPTION){
                String materialName = m_name.getText();
                String quantity = qty.getText();
                String price = cost.getText();
                String supplier = (String)suplist.getSelectedItem();
                
                Statement state = connect(user,pass);
                ResultSet rs1 = state.executeQuery("select supplier_id from supplier where supplier_name=\""+supplier+"\";");
                rs1.next();
                int suppid = rs1.getInt(1);
                String query1 = "insert into material(supplier_id, material_name, quantity, price) values \n" +  "("+suppid+", \"" + materialName + "\", " + quantity + ", " + price + ");";
                execQuer1(user, pass, query1);
                
                ResultSet rs2 = state.executeQuery("select material_id from material where material_name=\""+materialName+"\";");
                rs2.next();
                int nmatid = rs2.getInt(1);
                /*
                ResultSet rs3 = state.executeQuery("select project_id from project where project_name=\""+proj1+"\";");
                rs3.next();
                int projid = rs3.getInt(1); */
                
                String query2 = "insert into for_use(project_id, material_id, quantity) values ("+proj1+", "+nmatid+", "+quantity+");";
                execQuer1(user, pass, query2);
                state.close();
                //REFRESH THE GUI BY REDRAWING THE WHOLE TAB
                initTab1(proj1);
                
                JOptionPane.showMessageDialog( null, "New item in inventory for project: " +  quantity + " " + materialName + " that costs " + price + ".", "Your Results", JOptionPane.PLAIN_MESSAGE); 
            } } catch (MySQLSyntaxErrorException lel){
            JOptionPane.showMessageDialog(null, "Please check your entries again.", "Error!", JOptionPane.ERROR_MESSAGE); }
            
        }    else if (n == JOptionPane.NO_OPTION) {
            
            Statement stm = connect(user,pass);
            ResultSet rs = stm.executeQuery("select ifnull(material_name, 'NO MATERIALS IN WAREHOUSE') from material where supplier_id=1;");

            ArrayList<String> temp1 = new ArrayList<>();
            while(rs.next()) {
                    temp1.add(rs.getString(1));
            }
            String[] warehouse = new String[temp1.size()];
            temp1.toArray(warehouse);

            final JComboBox<String> matlist = new JComboBox<>(warehouse);
            
            JTextField qty = new JTextField();
            
            Object[] fields = {
                "Choose Material", matlist,
                "Quantity", qty
            };
            
            Object[] options1 = {"Ok", "Cancel"};
            
            int c = JOptionPane.showOptionDialog(null, fields, "Add Material", 
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
                null, options1, options1[0]);
            try {
            if (c == JOptionPane.OK_OPTION){
                //String materialName = m_name.getText();
                String quantity = qty.getText();
                //String price = cost.getText();
                String selmat = (String)matlist.getSelectedItem();
                
                Statement state = connect(user,pass);
                
                ResultSet rs1 = state.executeQuery("select price from material where material_name=\""+selmat+"\";");
                rs1.next();
                int price = rs1.getInt(1);
                
                ResultSet rs2 = state.executeQuery("select material_id from material where material_name=\""+selmat+"\";");
                rs2.next();
                int nmatid = rs2.getInt(1);
                /*
                ResultSet rs3 = state.executeQuery("select project_id from project where project_name=\""+proj1+"\";");
                rs3.next();
                int projid = rs3.getInt(1); */
                
                String query2 = "insert into for_use(project_id, material_id, quantity) values ("+proj1+", "+nmatid+", "+quantity+");";
                execQuer1(user, pass, query2);
                state.close();
                //REFRESH THE GUI BY REDRAWING THE WHOLE TAB
                initTab1(proj1);
                
                JOptionPane.showMessageDialog( null, "New item in inventory for project: " +  quantity + " " + selmat + " that costs " + price + ".", "Your Results", JOptionPane.PLAIN_MESSAGE); 
            } } catch (MySQLSyntaxErrorException lel){
            JOptionPane.showMessageDialog(null, "Please check your entries again.", "Error!", JOptionPane.ERROR_MESSAGE); }
            
        }
    }                                            

    private void RemoveItem2ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException, InstantiationException, ClassNotFoundException, IllegalAccessException{                                   
        if (ItemTable2.getSelectedRow() == -1){
           JOptionPane.showMessageDialog(null, "Please select an item to remove", "Error!", JOptionPane.ERROR_MESSAGE);
       }
       else{
           int[] toDelete = ItemTable2.getSelectedRows();
           String rows = new String();
           for (int i = 0; i < toDelete.length; i++){
               rows += "" + ItemTable2.getValueAt(toDelete[i], 0).toString();
               if (i < toDelete.length-1)
                    rows += ", ";
               if (i == toDelete.length)
                    rows += "?";
           }
           Object question = "Are you sure you want to delete the following items: " + rows + "?";
           Object[] options = {"Yes", "No"};
           
           int n = JOptionPane.showOptionDialog(null, question, "Remove Items", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
           try{
                if (n == JOptionPane.OK_OPTION){
                    String q = new String();
                    q = rows.replace(", ", " OR ");
                    q = rows.replace("?", "");
                    String query = "DELETE FROM material WHERE material_name = \"" + rows + "\";";
                    execQuer1(user, pass, query);

                    rows.replace("?", "");
                    JOptionPane.showMessageDialog(null, "The following materials have been deleted from the database:" + rows, "Materials deleted", JOptionPane.PLAIN_MESSAGE);
                //DELETE NECESSARY ROWS
                for (int i = 0; i < toDelete.length; i++)
                   ((DefaultTableModel)ItemTable2.getModel()).removeRow(toDelete[i]);
                initTab2(proj2);
                }
           } catch (MySQLSyntaxErrorException lel) {}
       }
    }                                 

    private void AddItem2ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException, InstantiationException, ClassNotFoundException, IllegalAccessException {                                         
        Object[] options = {"Current Suppliers", "Warehouse"};
        
        int n = JOptionPane.showOptionDialog(null, "Add Material from", "Add Material", 
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
                null, options, null);
        
        if (n == JOptionPane.YES_OPTION){ //if current suppliers option is selected
            
            Statement stm = connect(user,pass);
            ResultSet rs = stm.executeQuery("select supplier_name from supplier where supplier_id>1;");

            ArrayList<String> temp = new ArrayList<>();
            while(rs.next()) {
                temp.add(rs.getString(1));
            }
            String[] supl = new String[temp.size()];
            temp.toArray(supl);

            final JComboBox<String> suplist = new JComboBox<>(supl);
            
            JTextField m_name = new JTextField();
            JTextField qty = new JTextField();
            JTextField cost = new JTextField();
            
            Object[] fields = {
                "Choose Supplier", suplist,
                "Material Name", m_name,
                "Quantity", qty,
                "Price", cost,
            };
            
            Object[] options1 = {"Ok", "Cancel"};
            
            int c = JOptionPane.showOptionDialog(null, fields, "Add Material", 
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
                null, options1, options1[0]);
            try {
            if (c == JOptionPane.OK_OPTION){
                String materialName = m_name.getText();
                String quantity = qty.getText();
                String price = cost.getText();
                String supplier = (String)suplist.getSelectedItem();
                
                Statement state = connect(user,pass);
                ResultSet rs1 = state.executeQuery("select supplier_id from supplier where supplier_name=\""+supplier+"\";");
                rs1.next();
                int suppid = rs1.getInt(1);
                String query1 = "insert into material(supplier_id, material_name, quantity, price) values \n" +  "("+suppid+", \"" + materialName + "\", " + quantity + ", " + price + ");";
                execQuer1(user, pass, query1);
                
                ResultSet rs2 = state.executeQuery("select material_id from material where material_name=\""+materialName+"\";");
                rs2.next();
                int nmatid = rs2.getInt(1);
                /*
                ResultSet rs3 = state.executeQuery("select project_id from project where project_name=\""+proj2+"\";");
                rs3.next();
                int projid = rs3.getInt(1); */
                
                String query2 = "insert into for_use(project_id, material_id, quantity) values ("+proj2+", "+nmatid+", "+quantity+");";
                execQuer1(user, pass, query2);
                state.close();
                //REFRESH THE GUI BY REDRAWING THE WHOLE TAB
                initTab2(proj2);
                
                JOptionPane.showMessageDialog( null, "New item in inventory for project: " +  quantity + " " + materialName + " that costs " + price + ".", "Your Results", JOptionPane.PLAIN_MESSAGE); 
            } } catch (MySQLSyntaxErrorException lel){
            JOptionPane.showMessageDialog(null, "Please check your entries again.", "Error!", JOptionPane.ERROR_MESSAGE); }
            
        }    else if (n == JOptionPane.NO_OPTION) {
            
            Statement stm = connect(user,pass);
            ResultSet rs = stm.executeQuery("select ifnull(material_name, 'NO MATERIALS IN WAREHOUSE') from material where supplier_id=1;");

            ArrayList<String> temp1 = new ArrayList<>();
            while(rs.next()) {
                    temp1.add(rs.getString(1));
            }
            String[] warehouse = new String[temp1.size()];
            temp1.toArray(warehouse);

            final JComboBox<String> matlist = new JComboBox<>(warehouse);
            
            JTextField qty = new JTextField();
            
            Object[] fields = {
                "Choose Material", matlist,
                "Quantity", qty
            };
            
            Object[] options1 = {"Ok", "Cancel"};
            
            int c = JOptionPane.showOptionDialog(null, fields, "Add Material", 
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
                null, options1, options1[0]);
            try {
            if (c == JOptionPane.OK_OPTION){
                //String materialName = m_name.getText();
                String quantity = qty.getText();
                //String price = cost.getText();
                String selmat = (String)matlist.getSelectedItem();
                
                Statement state = connect(user,pass);
                
                ResultSet rs1 = state.executeQuery("select price from material where material_name=\""+selmat+"\";");
                rs1.next();
                int price = rs1.getInt(1);
                
                ResultSet rs2 = state.executeQuery("select material_id from material where material_name=\""+selmat+"\";");
                rs2.next();
                int nmatid = rs2.getInt(1);
                /*
                ResultSet rs3 = state.executeQuery("select project_id from project where project_name=\""+proj2+"\";");
                rs3.next();
                int projn = rs3.getInt(1); */
                
                String query2 = "insert into for_use(project_id, material_id, quantity) values ("+proj2+", "+nmatid+", "+quantity+");";
                execQuer1(user, pass, query2);
                state.close();
                //REFRESH THE GUI BY REDRAWING THE WHOLE TAB
                initTab2(proj2);
                
                JOptionPane.showMessageDialog( null, "New item in inventory for project: " +  quantity + " " + selmat + " that costs " + price + ".", "Your Results", JOptionPane.PLAIN_MESSAGE); 
            } } catch (MySQLSyntaxErrorException lel){
            JOptionPane.showMessageDialog(null, "Please check your entries again.", "Error!", JOptionPane.ERROR_MESSAGE); }
            
        }
    }                                        

    private void AddEmployee2ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException, InstantiationException, ClassNotFoundException, IllegalAccessException {                                             
        //System.out.println("in 2");        // TODO add your handling code here:
        //this is the Add Employee button of Project 2 tab
        Statement stm = connect(user,pass);
        ResultSet rs = stm.executeQuery("select ifnull(employee_name,'NO EMPLOYEES') from employee;");

        ArrayList<String> temp = new ArrayList<>();
        while(rs.next()) {
            temp.add(rs.getString(1));
        }
        String[] employ = new String[temp.size()];
        temp.toArray(employ);

        final JComboBox<String> employlist = new JComboBox<>(employ);

        Object[] fields = {"Choose Employee", employlist};
        Object[] options = {"Ok", "Cancel"};

        int n = JOptionPane.showOptionDialog(null, fields, 
            "Add Employee to Project", JOptionPane.YES_NO_OPTION, 
            JOptionPane.PLAIN_MESSAGE, null, options, options[1]);

        if (n == JOptionPane.OK_OPTION){
            String selemp = (String)employlist.getSelectedItem();

            Statement state = connect(user,pass);

            ResultSet rs2 = state.executeQuery("select employee_id from employee where employee_name=\""+selemp+"\";");
            rs2.next();
            int empid = rs2.getInt(1);
/*
            ResultSet rs3 = state.executeQuery("select project_id from project where project_name=\""+proj2+"\";");
            rs3.next();
            int projid = rs3.getInt(1); */

            String query2 = "insert into payroll(project_id, employee_id) values ("+proj2+", "+empid+");";
            execQuer1(user, pass, query2);
            state.close();

            //REFRESH THE GUI BY REDRAWING THE WHOLE TAB
            initTab2(proj2);
              
          }
    }                                            

    private void RemoveEmployee1ActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // Project 1
        System.out.println("in 1");
    }                                               

    private void AddtoEmployeeActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        // this is the Add Employee button in the Employees tab
        System.out.println("hire employee!");
    }                                             

    private void RemoveToEmployeeActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // Employees Tab
        System.out.println("pink slip");
    }                                                

    private void UpdateInventoryActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void Week1ButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void Week2ButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void RemoveEmployee2ActionPerformed(java.awt.event.ActionEvent evt) {                                                
        //project 2 tab
        System.out.println("in 2");
    }                                               

    private void AddEmployee1ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException, InstantiationException, ClassNotFoundException, IllegalAccessException {                                             
        //this is the Add Employee button in Project1 tab
        //System.out.println("in 1");
        Statement stm = connect(user,pass);
        ResultSet rs = stm.executeQuery("select ifnull(employee_name,'NO EMPLOYEES') from employee;");

        ArrayList<String> temp = new ArrayList<>();
        while(rs.next()) {
            temp.add(rs.getString(1));
        }
        String[] employ = new String[temp.size()];
        temp.toArray(employ);

        final JComboBox<String> employlist = new JComboBox<>(employ);

        Object[] fields = {"Choose Employee", employlist};
        Object[] options = {"Ok", "Cancel"};

        int n = JOptionPane.showOptionDialog(null, fields, 
            "Add Employee to Project", JOptionPane.YES_NO_OPTION, 
            JOptionPane.PLAIN_MESSAGE, null, options, options[1]);

        if (n == JOptionPane.OK_OPTION){
            String selemp = (String)employlist.getSelectedItem();

            Statement state = connect(user,pass);

            ResultSet rs2 = state.executeQuery("select employee_id from employee where employee_name=\""+selemp+"\";");
            rs2.next();
            int empid = rs2.getInt(1);
/*
            ResultSet rs3 = state.executeQuery("select project_id from project where project_name=\""+proj1+"\";");
            rs3.next();
            int projid = rs3.getInt(1);
*/
            String query2 = "insert into payroll(project_id, employee_id) values ("+proj1+", "+empid+");";
            execQuer1(user, pass, query2);
            state.close();

            //REFRESH THE GUI BY REDRAWING THE WHOLE TAB
            initTab1(proj1);
              
          }
    }                                            

    private void CreateProjectActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        String[] monthStrings = {"January", "February","March", "April",
                                 "May", "June","July", "August",
                                 "September", "October","November", "December"};
        JComboBox<String> month1 = new JComboBox<>(monthStrings);
        JComboBox<String> month2 = new JComboBox<>(monthStrings);
        
        ArrayList<String> day = new ArrayList<>();
        for (int i=1; i < 32; i++){
            day.add(i+"");
        }
        String[] days = new String[day.size()];
        day.toArray(days);
        JComboBox<String> day1 = new JComboBox<>(days);
        JComboBox<String> day2 = new JComboBox<>(days);
        
        SpinnerModel year = new SpinnerNumberModel(2014, 1900, 4000, 1);
        JSpinner yrspin1 = new JSpinner(year);
        SpinnerModel year1 = new SpinnerNumberModel(2014, 1900, 4000, 1);
        JSpinner yrspin2 = new JSpinner(year1);
        
        JLabel start = new JLabel("Start date: ");
        JLabel end = new JLabel("End date: ");
        
        JPanel datepanel = new JPanel(new GridLayout(1,4));
        datepanel.add(start);
        datepanel.add(month1);
        datepanel.add(day1);
        datepanel.add(yrspin1);
        JPanel datepanel1 = new JPanel(new GridLayout(1,4));
        datepanel1.add(end);
        datepanel1.add(month2);
        datepanel1.add(day2);
        datepanel1.add(yrspin2);
        
        JPanel panel = new JPanel( new GridLayout(7, 1) );
        
        panel.add( new JLabel("Name of Project:") );
        JTextField name = new JTextField(10);
        panel.add( name );
        
        panel.add( new JLabel("Client: ") );
        JTextField cli = new JTextField(10);
        panel.add( cli );
        
        panel.add(datepanel);
        panel.add(datepanel1);

        Object[] options1 = {"Ok", "Cancel"};

        int c = JOptionPane.showOptionDialog(null, panel, "Create New Project", 
            JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
            null, options1, options1[0]);
        
        try {
            if (c == JOptionPane.OK_OPTION){
                String projname = name.getText();
                String client = cli.getText();
                String mon1 = (String)month1.getSelectedItem();
                String mon2 = (String)month2.getSelectedItem();
                String d1 = (String)day1.getSelectedItem();
                String d2 = (String)day2.getSelectedItem();
                String y1 = yrspin1.getValue().toString();
                String y2 = yrspin2.getValue().toString();

                if (Integer.parseInt(d1) < 10) {
                    d1 = "0"+d1;
                }
                if (Integer.parseInt(d2) < 10) {
                    d2 = "0"+d2;
                }


                switch (mon1.toLowerCase()) {
                case "january":
                    mon1 = "01";
                    break;
                case "february":
                    mon1 = "02";
                    break;
                case "march":
                    mon1 = "03";
                    break;
                case "april":
                    mon1 = "04";
                    break;
                case "may":
                    mon1 = "05";
                    break;
                case "june":
                    mon1 = "06";
                    break;
                case "july":
                    mon1 = "07";
                    break;
                case "august":
                    mon1 = "08";
                    break;
                case "september":
                    mon1 = "09";
                    break;
                case "october":
                    mon1 = "10";
                    break;
                case "november":
                    mon1 = "11";
                    break;
                case "december":
                    mon1 = "12";
                    break;
                default: 
                    mon1 = "00";
                    break;
            }

                switch (mon2.toLowerCase()) {
                case "january":
                    mon2 = "01";
                    break;
                case "february":
                    mon2 = "02";
                    break;
                case "march":
                    mon2 = "03";
                    break;
                case "april":
                    mon2 = "04";
                    break;
                case "may":
                    mon2 = "05";
                    break;
                case "june":
                    mon2 = "06";
                    break;
                case "july":
                    mon2 = "07";
                    break;
                case "august":
                    mon2 = "08";
                    break;
                case "september":
                    mon2 = "09";
                    break;
                case "october":
                    mon2 = "10";
                    break;
                case "november":
                    mon2 = "11";
                    break;
                case "december":
                    mon2 = "12";
                    break;
                default: 
                    mon2 = "00";
                    break;
            }

                String startd = y1+"-"+mon1+"-"+d1;
                String endd = y2+"-"+mon2+"-"+d2;
                System.out.println(projname+" "+startd+" "+endd+" "+client);

                String query2 = "insert into project(project_name, start_date, end_date, client) "
                        + "values (\""+projname+"\", \""+startd+"\", \""+endd+"\", \"" +client+ "\");";
                execQuer1(user, pass, query2);

                JOptionPane.showMessageDialog( null, "New project: "+projname+"\nClient: " +  client + "\nStart date: " + startd + "\nEnd date: " + endd, "Your Results", JOptionPane.PLAIN_MESSAGE); 
             } 
        } catch (MySQLSyntaxErrorException lel){
                JOptionPane.showMessageDialog(null, "Please check your entries again.", "Error!", JOptionPane.ERROR_MESSAGE); 
        }
    }                                             

    private void WarehouseTableMouseClicked(java.awt.event.MouseEvent evt) {                                            
        try{
            
           
            int row = WarehouseTable.getSelectedRow();
            String Table_click = (WarehouseTable.getModel().getValueAt(row,0).toString());
            String stringcon = "jdbc:mysql://localhost:3306/jcarl";//databaseName=travel;user=root;password=12345
            Connection con = DriverManager.getConnection(stringcon,"root","root");
            String sql = "Select * from material where material_id='"+Table_click+"' ";
            Statement pst= con.prepareStatement(sql);   
            ResultSet rr = pst.executeQuery(sql);
            if(rr.next()){
                String add1 = rr.getString("material_id");
                txt_employee_id.setText(add1);
                String add2 = rr.getString("material_name");
                txt_material_name.setText(add2);
                
          }
            
       } catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
            
        }
    }                                           

    private void RemoveWarehouseActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void txtmon_p2ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void edit_material_p2ActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void ItemTable2MouseClicked(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void PayrollTable2MouseClicked(java.awt.event.MouseEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void txtmon_p3ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void edit_material_p3ActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void update_employee_p3ActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void update_employee_p2ActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void Update_employeeActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void EmployeesTableMouseClicked(java.awt.event.MouseEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void POTableMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void EmployeScrollMouseClicked(java.awt.event.MouseEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void MaterialTable1MouseClicked(java.awt.event.MouseEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void REMOVEPOActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void ADDPOActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void UPDATEPOActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jScrollPane5MouseClicked(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void AddWarehouseActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void PayrollTable1MouseClicked(java.awt.event.MouseEvent evt) {                                           
        // TODO add your handling code here:
    }                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       // JFrame window = new NewJFrame("lol");
        //window.setVisible(true);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    try {
                        new NewJFrame().setVisible(true);
                    } catch (SQLException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton ADDPO;
    private javax.swing.JButton AddEmployee1;
    private javax.swing.JButton AddEmployee2;
    private javax.swing.JButton AddItem2;
    private javax.swing.JButton AddMaterial1;
    private javax.swing.JButton AddWarehouse;
    private javax.swing.JButton AddtoEmployee;
    private javax.swing.JButton CreateProject;
    private javax.swing.JScrollPane EmployeScroll;
    private javax.swing.JLabel EmployeeInfoLabel;
    private javax.swing.JTable EmployeesTable;
    private javax.swing.JTable ItemTable2;
    private javax.swing.JButton LoadProject;
    private javax.swing.JTable MaterialTable1;
    private javax.swing.JTable POTable;
    private javax.swing.JTable PayrollTable1;
    private javax.swing.JTable PayrollTable2;
    private javax.swing.JPanel Project2Panel;
    private javax.swing.JButton REMOVEPO;
    private javax.swing.JButton RemoveEmployee1;
    private javax.swing.JButton RemoveEmployee2;
    private javax.swing.JButton RemoveItem2;
    private javax.swing.JButton RemoveMaterial1;
    private javax.swing.JButton RemoveToEmployee;
    private javax.swing.JButton RemoveWarehouse;
    private javax.swing.JTabbedPane Tab1;
    private javax.swing.JButton UPDATEPO;
    private javax.swing.JButton UpdateInventory;
    private javax.swing.JButton Update_employee;
    private javax.swing.JTable WarehouseTable;
    private javax.swing.JTextField Week1;
    private javax.swing.JButton Week1Button;
    private javax.swing.JTextField Week2;
    private javax.swing.JButton Week2Button;
    private javax.swing.JButton edit_material_p2;
    private javax.swing.JButton edit_material_p3;
    private javax.swing.JTextField employee_name_p2;
    private javax.swing.JTextField employee_name_p3;
    private javax.swing.JTextField employee_rate_p2;
    private javax.swing.JTextField employee_rate_p3;
    private javax.swing.JLabel fri_p2;
    private javax.swing.JLabel fri_p3;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField material_name_p2;
    private javax.swing.JTextField material_name_p3;
    private javax.swing.JTextField material_quantity_p2;
    private javax.swing.JTextField material_quantity_p3;
    private javax.swing.JLabel mon_p2;
    private javax.swing.JLabel mon_p3;
    private javax.swing.JLabel sat_p2;
    private javax.swing.JLabel sat_p3;
    private javax.swing.JLabel sun_p2;
    private javax.swing.JLabel sun_p3;
    private javax.swing.JLabel thurs_p2;
    private javax.swing.JLabel thurs_p3;
    private javax.swing.JLabel tues_p2;
    private javax.swing.JLabel tues_p3;
    private javax.swing.JTextField txt_employee_id;
    private javax.swing.JTextField txt_employee_name;
    private javax.swing.JTextField txt_employee_project;
    private javax.swing.JTextField txt_material_name;
    private javax.swing.JTextField txtfri_p2;
    private javax.swing.JTextField txtfri_p3;
    private javax.swing.JTextField txtmon_p2;
    private javax.swing.JTextField txtmon_p3;
    private javax.swing.JTextField txtsat_p2;
    private javax.swing.JTextField txtsat_p3;
    private javax.swing.JTextField txtsun_p2;
    private javax.swing.JTextField txtsun_p3;
    private javax.swing.JTextField txtthurs_p2;
    private javax.swing.JTextField txtthurs_p3;
    private javax.swing.JTextField txttues_p2;
    private javax.swing.JTextField txttues_p3;
    private javax.swing.JTextField txtwed_p2;
    private javax.swing.JTextField txtwed_p3;
    private javax.swing.JButton update_employee_p2;
    private javax.swing.JButton update_employee_p3;
    private javax.swing.JLabel wed_p2;
    private javax.swing.JLabel wed_p3;
    // End of variables declaration                 
}
